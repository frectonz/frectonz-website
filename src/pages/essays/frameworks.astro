<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <title>Frameworks and Normalcy</title>
  </head>
  <body>
    <header class="my-10 text-center font-serif">
      <p class="text-xl">frectonz's</p>
      <h1 class="text-6xl">Frameworks and Normalcy</h1>
    </header>

    <main class="container mx-auto p-4 text-lg grid grid-cols-1 gap-4">
      <div class="w-fit border border-black p-2 mb-5">
        <p class="bg-white text-black">normal</p>
        <p class="italic">/ˈnɔːml/</p>
        <p class="pl-4">
          1. <span class="bg-black text-white">conforming to a standard</span>;
          usual, typical, or expected.
        </p>
      </div>

      <p>
        From what i have seen one of the main reason for proliferation of
        developemnt frameworks in the modern software development scene, is that
        they serve an important role in the world of capitalism, or as you might
        now them Jobs.
      </p>

      <p>
        Jobs really like frameworks (or as I like to call them, agents of
        normalcy).
      </p>

      <p>
        I am convinced that the only value frameworks really have is increasing
        the replaceability of the programmer. You may have heard this before,
        but people often use the word "maintainability" instead of
        "replaceability".
      </p>

      <p>
        If you want <span class="bg-black text-white">performance</span>, a pure
        language-dependency only implementation for your custom usecase will
        always win in any performance benchmark.
      </p>

      <p>
        If you want <span class="bg-black text-white">readability</span>,
        creating a custom DSL is the only way to maximize customization with
        readability of your source code.
      </p>

      <p>
        Frameworks exist in the middle ground. They can't do both. They just
        work, without needing nothing fancy or creative. This comes with the
        cost of hiding everything through "magic" (heaps of abstraction).
      </p>
    </main>
  </body>
</html>
